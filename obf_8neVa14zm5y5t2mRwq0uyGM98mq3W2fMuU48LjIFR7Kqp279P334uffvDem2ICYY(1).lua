-- // Melatonin Pet Sim X
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v24=nil;function v24()local v31=0 -0 ;local v32;local v33;local v34;local v35;while true do if (v31==(0 + 0)) then v32,v33,v34,v35=v1(v16,v19,v19 + 2 + 1 );v19=v19 + (9 -5) ;v31=1 + 0 ;end if (v31==(1 + 0)) then return (v35 * 16777216) + (v34 * (185139 -(365505 -245902))) + (v33 * (1053 -(647 + 150))) + v32 ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v36=1270 -(882 + 388) ;local v37;local v38;local v39;local v40;local v41;local v42;while true do local v66=0;while true do if (v66~=(0 + 0)) then else if (v36==1) then v41=v24();v42={};for v96=1 + 0 ,v41 do local v97=0;local v98;local v99;local v100;local v101;while true do if (v97~=0) then else v98=0;v99=nil;v97=3 -2 ;end if (v97==(1 + 0)) then local v118=0;while true do if (v118~=(1 + 0)) then else v97=4 -2 ;break;end if ((1158 -(194 + 964))==v118) then v100=nil;v101=nil;v118=1 + 0 ;end end end if (2~=v97) then else while true do if (v98==1) then v101=nil;while true do if (v99~=1) then else if (v100==(798 -(542 + 255))) then v101=v22()~=(0 -0) ;elseif (v100==(5 -3)) then v101=v25();elseif (v100==(9 -6)) then v101=v26();end v42[v96]=v101;break;end if ((0 -0)==v99) then local v125=1633 -(1269 + 364) ;local v126;local v127;while true do if ((330 -(260 + 69))==v125) then while true do if (v126==0) then v127=0 -0 ;while true do if (v127==(584 -(503 + 81))) then local v200=0 + 0 ;local v201;while true do if (v200~=(0 + 0)) then else v201=0 -0 ;while true do if (v201==1) then v127=1 + 0 ;break;end if ((0 + 0)==v201) then local v245=0;while true do if (v245~=(0 -0)) then else v100=v22();v101=nil;v245=1;end if (v245==(894 -(362 + 531))) then v201=1 + 0 ;break;end end end end break;end end end if (v127~=(1 + 0)) then else v99=1;break;end end break;end end break;end if (v125==(0 + 0)) then v126=0 + 0 ;v127=nil;v125=1 -0 ;end end end end break;end if (v98==0) then local v120=0 -0 ;while true do if (v120==(1 + 0)) then v98=1;break;end if (v120==(0 + 0)) then v99=0;v100=nil;v120=1;end end end end break;end end end v40[3]=v22();v36=4 -2 ;end if (v36~=(431 -(329 + 100))) then else for v102=1 + 0 ,v24() do local v103=0;local v104;local v105;local v106;while true do if (v103==0) then v104=789 -(99 + 690) ;v105=nil;v103=1 -0 ;end if (v103==1) then v106=nil;while true do if (v104~=(140 -(115 + 24))) then else while true do if (v105~=(0 -0)) then else v106=v22();if (v21(v106,3 -2 ,1 + 0 )==(0 -0)) then local v128=0;local v129;local v130;local v131;local v132;while true do if (v128==(422 -(232 + 188))) then while true do if (v129==(9 -7)) then local v190=0 + 0 ;local v191;while true do if (v190~=(386 -(327 + 59))) then else v191=0 + 0 ;while true do if (v191==(319 -(33 + 285))) then v129=1 + 2 ;break;end if (v191==(0 -0)) then local v243=0 -0 ;local v244;while true do if ((0 -0)~=v243) then else v244=0 + 0 ;while true do if (v244==(423 -(317 + 105))) then v191=3 -2 ;break;end if (v244~=0) then else local v268=506 -(118 + 388) ;while true do if (v268~=(1 -0)) then else v244=1 + 0 ;break;end if ((1260 -(472 + 788))==v268) then if (v21(v131,1 + 0 ,1)~=(1246 -(557 + 688))) then else v132[1 + 1 ]=v42[v132[2]];end if (v21(v131,2 + 0 ,2 + 0 )==(1 + 0)) then v132[9 -6 ]=v42[v132[3]];end v268=1;end end end end break;end end end end break;end end end if (v129~=(484 -(429 + 52))) then else if (v21(v131,3 + 0 ,177 -(69 + 105) )==(1 + 0)) then v132[2 + 2 ]=v42[v132[4 + 0 ]];end v37[v102]=v132;break;end if ((1 + 0)==v129) then local v193=0;local v194;while true do if (v193~=0) then else v194=621 -(92 + 529) ;while true do if (v194==(1 + 0)) then v129=2;break;end if (v194==(1191 -(1168 + 23))) then v132={v23(),v23(),nil,nil};if (v130==(267 -(66 + 201))) then local v252=402 -(178 + 224) ;local v253;while true do if (v252~=(840 -(467 + 373))) then else v253=0 -0 ;while true do if (v253~=(0 -0)) then else v132[11 -8 ]=v23();v132[1 + 3 ]=v23();break;end end break;end end elseif (v130==(808 -(248 + 559))) then v132[11 -8 ]=v24();elseif (v130==(1 + 1)) then v132[2 + 1 ]=v24() -((1 + 1)^16) ;elseif (v130==(892 -(199 + 690))) then local v283=544 -(227 + 317) ;local v284;while true do if (v283==(1761 -(1098 + 663))) then v284=0 -0 ;while true do if (v284==(1108 -(290 + 818))) then v132[5 -2 ]=v24() -(2^(45 -29)) ;v132[11 -7 ]=v23();break;end end break;end end end v194=525 -(251 + 273) ;end end break;end end end if ((0 + 0)~=v129) then else local v195=0;local v196;local v197;while true do if (v195==0) then v196=0 -0 ;v197=nil;v195=3 -2 ;end if (v195==1) then while true do if (v196==(0 + 0)) then v197=0;while true do if (v197==0) then local v259=0 -0 ;while true do if (v259~=(1 + 0)) then else v197=1 + 0 ;break;end if (v259==(570 -(259 + 311))) then local v270=0;while true do if (v270==(832 -(310 + 522))) then v130=v21(v106,1 + 1 ,1036 -(131 + 902) );v131=v21(v106,2 + 2 ,28 -22 );v270=1;end if (v270~=(1502 -(114 + 1387))) then else v259=1 + 0 ;break;end end end end end if (v197==1) then v129=527 -(403 + 123) ;break;end end break;end end break;end end end end break;end if ((1873 -(558 + 1315))==v128) then v129=0 + 0 ;v130=nil;v128=1;end if (v128==(1 + 0)) then local v148=0 -0 ;local v149;while true do if ((0 -0)~=v148) then else v149=0 -0 ;while true do if (v149~=(4 -3)) then else v128=1081 -(658 + 421) ;break;end if ((0 -0)~=v149) then else v131=nil;v132=nil;v149=3 -2 ;end end break;end end end end end break;end end break;end if (v104~=(0 + 0)) then else local v121=0 -0 ;local v122;while true do if (v121==(1606 -(227 + 1379))) then v122=0 + 0 ;while true do if (v122==(4 -3)) then v104=4 -3 ;break;end if (v122==(1577 -(1107 + 470))) then v105=0 + 0 ;v106=nil;v122=1;end end break;end end end end break;end end end for v107=2 -1 ,v24() do v38[v107-(1 + 0) ]=v29();end for v109=1201 -(312 + 888) ,v24() do v39[v109]=v24();end return v40;end v66=569 -(510 + 58) ;end if (v66==1) then if (v36~=(0 + 0)) then else local v91=1073 -(549 + 524) ;while true do if (v91==0) then v37={};v38={};v91=1605 -(387 + 1217) ;end if (v91~=(1 + 0)) then else v39={};v40={v37,v38,nil,v39};v91=4 -2 ;end if (v91==(962 -(816 + 144))) then v36=1845 -(1372 + 472) ;break;end end end break;end end end end v30=nil;v18=7;end if (v18==7) then function v30(v43,v44,v45)local v46=v43[1];local v47=v43[2];local v48=v43[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==2) then v72=nil;function v72()local v80=v46;local v81=v47;local v82=v48;local v83=v28;local v84={};local v85={};local v86={};for v92=1902 -(752 + 1150) ,v71 do if (((1087 -(37 + (779 -(63 + 16))))<2738) and (v92>=v82)) then v84[v92-v82 ]=v70[v92 + 1 + 0 ];else v86[v92]=v70[v92 + (541 -(151 + 389)) ];end end local v87=(v71-v82) + (1 -0) ;local v88;local v89;while true do local v93=0 + 0 ;local v94;while true do if (((211 -(117 + 94))==v93) or ((2998 -1109)<=(2754 -(634 + 1144)))) then v94=0 -0 ;while true do if ((((5662 -(295 + 48)) -3532)>=(2459 -992)) and (v94==(2 -1))) then if ((v89<=11) or ((736 + 1847)<=(1281 + 736))) then if ((v89<=(6 -1)) or ((754 -(186 + 201))>1859)) then if ((2444>(1056 -481)) and (v89<=(3 -1))) then if ((v89<=(0 + 0)) or ((2379 -(156 + 501))>(1279 + 3597))) then v68=v88[8 -(806 -(275 + 526)) ];elseif ((v89>(1 + 0)) or ((1717 -(91 + 326))<=(885 -(401 + 446)))) then if ((3944<(12565 -7618)) and (v86[v88[2]]==v88[218 -(212 + 2) ])) then v68=v68 + 1 + 0 ;else v68=v88[3];end else v86[v88[2 + 0 ]][v88[3 + (1819 -(1464 + 355)) ]]=v88[404 -(268 + 132) ];end elseif ((3698<4833) and (v89<=((6 -4) + (1449 -(743 + 705))))) then v86[v88[1370 -(1185 + 183) ]]={};elseif ((v89==4) or ((1191 + 1212)>(5939 -(212 + 203 + 1 + 551)))) then v86[v88[1454 -((2667 -(1004 + 235)) + 24) ]]=v30(v81[v88[11 -8 ]],nil,v45);else local v153=0 -0 ;local v154;local v155;while true do if (((4594 -(624 + 657))<(4801 -(427 + 635))) and (v153==(1205 -(388 + 817)))) then local v202=1179 -(714 + 465) ;while true do if ((((1388 -(40 + 142)) -590)>=(285 + 137)) and (v202==(1243 -(309 + 933)))) then v153=1 -(1395 -(428 + 967)) ;break;end if ((v202==0) or ((11005 -7010)<(56 + 104))) then v154=1554 -(803 + 751) ;v155=nil;v202=1 + 0 ;end end end if ((v153==(3 -2)) or (55>=(444 -205))) then while true do if (((5387 -(121 + 827))==((25275 -14481) -6355)) and ((0 -0)==v154)) then v155=v88[2];v86[v155](v13(v86,v155 + 1 + 0 ,v88[1 + 2 + 0 ]));break;end end break;end end end elseif ((v89<=(7 + 1)) or (2111<615)) then if (((4993 -3315)>=825) and (v89<=(1665 -(1561 + 98)))) then if (((3807 -(42 + 844))>(1441 -(58 + 83))) and (v88[5 -3 ]==v86[v88[1 + 3 ]])) then v68=v68 + (4 -3) ;else v68=v88[(1 + 6) -4 ];end elseif (((4265 + 684)>=(2317 + 685)) and (v89==(11 -(249 -(173 + 72))))) then local v157=0 -0 ;local v158;local v159;local v160;local v161;while true do if ((1==v157) or (2803>=3392)) then v160=nil;v161=nil;v157=3 -1 ;end if (((2376 + (1530 -(1104 + 96)))==(7803 -5097)) and (v157==(2 + 0))) then while true do if ((v158==(2 -1)) or (((1842 + 1974) -(725 + 3))==(6579 -(316 + 1560)))) then v161=nil;while true do if ((((3498 -(226 + 1094)) -(846 + 1071))<4468) and (v159==(0 + 0))) then local v246=447 -(145 + 302) ;while true do if ((v246==(0 + 0)) or ((4528 -(894 + 13 + 145))==4433)) then local v261=0 + (1442 -(796 + 646)) ;while true do if (((2265 -(1352 + 218))<(8817 -5871)) and ((0 + 0 + 0)==v261)) then v160=v88[(1459 -(559 + 898)) + 0 ];v161={};v261=1088 -(97 + 990) ;end if (((2484 -(1122 + 49))==(2469 -(562 + 594))) and (v261==(1 -0))) then v246=1 + 0 ;break;end end end if ((v246==(1 + 0 + 0)) or ((1483 + 2335)==4661)) then v159=1 -0 ;break;end end end if (((7841 -5212)>=(3105 -(1569 + 195))) and (v159==(1 + 0))) then for v254=1148 -((1898 -1368) + (2100 -(612 + 871))) , #v85 do local v255=323 -(108 + 215) ;local v256;while true do if (((0 -0)==v255) or ((1205 + 2886)==(2330 -((252 -148) + 327)))) then v256=v85[v254];for v271=0 -0 , #v256 do local v272=0 -0 ;local v273;local v274;local v275;local v276;while true do if ((v272==((1447 -(194 + 1253)) -0)) or ((4729 -((978 -(87 + 88)) + 621))<(578 -(16 + 30)))) then v273=0;v274=nil;v272=1523 -(247 + 1275) ;end if (((5105 -3650)<(4666 -(13 + 2))) and (v272==(1868 -(1139 + 727)))) then while true do if ((v273==1) or ((2654 -(1255 + 154))==(2454 -((510 -190) + 713)))) then v276=v274[1 + 1 ];if (((565 + 1330)>=(36 + 418 + 578)) and (v275==v86) and (v276>=v160)) then local v297=1223 -(1129 + 94) ;while true do if (((1120 + 48)<(4621 -2770)) and (v297==(1632 -(931 + 701)))) then v161[v276]=v275[v276];v274[(601 -(283 + 316)) -1 ]=v161;break;end end end break;end if (((19431 -15107)>=(1779 + 1346)) and (v273==(512 -(23 + 45 + 444)))) then local v294=0 + 0 ;while true do if ((v294==(4 -3)) or (1097<(807 + 8))) then v273=1621 -(1546 + 74) ;break;end if (((1723 + (1925 -(772 + 60)))>=(2017 -(1181 + 118))) and ((0 -0)==v294)) then local v298=0 + 0 ;while true do if (((3054 -778)>((6759 -3166) -1973)) and (v298==(1319 -(968 + 351)))) then v274=v256[v271];v275=v274[1 + 0 ];v298=835 -(265 + 569) ;end if ((((3496 -(316 + 299)) -1355)>=(1394 + 46)) and (v298==(1 -0))) then v294=1;break;end end end end end end break;end if (((2051 -(101 + 161))<(1490 + 1916)) and (v272==(1323 -(442 + 880)))) then local v285=0 -0 ;while true do if ((v285==(1411 -(223 + 1188))) or ((1174 + 497)<(452 + 165))) then v275=nil;v276=nil;v285=431 -(55 + 375) ;end if ((956<(184 + 964)) and ((1 + 0)==v285)) then v272=2 + 0 ;break;end end end end end break;end end end break;end end break;end if (((5079 -(2006 + 351))<4975) and ((339 -(247 + (890 -(552 + 246))))==v158)) then v159=0;v160=nil;v158=2 -1 ;end end break;end if (((3255 + 406)>=(10525 -(8684 -(725 + 91)))) and (v157==((655 -381) -(245 + 29)))) then v158=0 -0 ;v159=nil;v157=2 -1 ;end end else v86[v88[2]]=v44[v88[5 -2 ]];end elseif ((v89<=9) or ((6603 -(1110 + 560))<=(3591 + 1110))) then local v137=580 -(369 + 211) ;local v138;local v139;while true do if ((v137==0) or ((16886 -13422)==(11573 -6920))) then local v187=0 -0 ;while true do if (((0 + 0)==v187) or ((14572 -10758)<(953 -(375 + (2031 -(1836 + 75)))))) then v138=0 + 0 + 0 ;v139=nil;v187=2 -1 ;end if ((v187==(1 + 0)) or (2536>=(9545 -6212))) then v137=1 + 0 ;break;end end end if ((1==v137) or ((419 + 4344)<(6024 -(867 + 650)))) then while true do if (((3450 -(89 + 139))<=(4730 -1433)) and (v138==(0 -0))) then v139=v88[2];v86[v139]=v86[v139](v13(v86,v139 + (19 -(17 + 1)) ,v69));break;end end break;end end elseif ((v89>(1730 -(837 + 883))) or ((2316 -(62 + 442))<((732 + 250) -(45 + 179)))) then local v164=0;local v165;while true do if ((v164==(80 -(69 + 11))) or ((505 -250)>=(2636 -(330 + 1425)))) then v165=v88[1647 -(702 + 943) ];v86[v165]=v86[v165]();break;end end else v86[v88[854 -((1248 -(722 + 288)) + 614) ]]=v88[1842 -(822 + 1017) ];end elseif ((v89<=(5 + 12)) or ((425 + 1925)>3751)) then if (((11192 -8362)==2830) and (v89<=(8 + 6))) then if (((209 + 2561)>=(2533 -(737 + 180))) and (v89<=(11 + (2 -1)))) then v86[v88[701 -(398 + 301) ]]();elseif ((v89>13) or (3733<=(815 + 172 + 1191))) then local v168=(0 -0) + 0 ;local v169;local v170;local v171;local v172;while true do if ((v168==(0 + 0 + 0)) or (1465<=97)) then v169=0 + 0 ;v170=nil;v168=1;end if (((2281 + 732)>2769) and (v168==(189 -(32 + 156)))) then v171=nil;v172=nil;v168=2 + 0 ;end if ((v168==(1733 -(1435 + 296))) or ((1818 + 2674)==446)) then while true do if ((v169==1) or ((8330 -3748)<=4430)) then v172=nil;while true do if ((0==v170) or (((9717 -6819) -(274 + (1683 -(1112 + 564))))<(982 -527))) then local v247=1025 -((675 -(8 + 13)) + 371) ;local v248;while true do if ((v247==(1346 -(319 + 1027))) or ((60 + 274)>2615)) then v248=0;while true do if (((2001 + 2077)<(10544 -5767)) and ((1 + 0)==v248)) then v170=1703 -(268 + 1434) ;break;end if ((1892<(13325 -9682)) and (v248==(0 -0))) then local v278=0;while true do if (((1928 -(15 + 1))<(4112 -1747)) and (v278==(1995 -(40 + 1954)))) then v248=1 + 0 ;break;end if ((v278==(0 -0)) or ((4967 -(425 + 923))==(5056 -(353 + 56)))) then v171=v88[1 + 1 ];v172=v86[v88[8 -5 ]];v278=(4 -3) + 0 ;end end end end break;end end end if ((((61 + 3001) -(255 + 120))>=(608 + 430)) and (v170==(1 + 0))) then v86[v171 + 1 + 0 + 0 ]=v172;v86[v171]=v172[v88[4]];break;end end break;end if (((640 + (4287 -(57 + 39)))==(3578 + 237 + 1016)) and (v169==(0 -0))) then local v234=0;while true do if ((v234==(693 -(449 + 244))) or ((1525 + 2642)==2273)) then v170=0 + 0 ;v171=nil;v234=(3 -2) + 0 ;end if ((v234==(3 -2)) or (4034>4608)) then v169=1 -0 ;break;end end end end break;end end else local v173=1916 -(883 + 1033) ;local v174;local v175;local v176;while true do if (((6 + 297)<(2994 -2336)) and (v173==(1706 -(1327 + 377)))) then for v214=2 -1 ,v88[1877 -(41 + 1832) ] do local v215=0 + 0 ;local v216;local v217;local v218;while true do if (((303 + 41)==(1496 -(7 + 1145))) and (v215==0)) then v216=0 -0 ;v217=nil;v215=662 -(31 + 630) ;end if ((4339>=((2197 -(88 + 4)) -(1159 + 81))) and ((1 + (0 -0))==v215)) then v218=nil;while true do if (((2523 + 1667)>(1089 + (157 -68))) and (v216==(163 -(96 + 67)))) then local v257=0;while true do if ((v257==((4 -2) -1)) or (2846<(165 + 1042))) then v216=1276 -(12 + 1263) ;break;end if ((v257==(920 -(723 + 197))) or (2686>(1518 + 1645))) then v217=1879 -(1150 + 729) ;v218=nil;v257=1;end end end if (((256 + 818)<(1040 + 3912)) and (v216==(82 -(58 + 23)))) then while true do if ((v217==(0 + 0)) or ((431 -73)>(6335 -3532))) then local v263=0;local v264;while true do if (((1348 -(263 + 933))<2665) and (v263==(1950 -(664 + 1286)))) then v264=129 -(41 + 88) ;while true do if ((v264==0) or ((5409 -3807)==(6180 -2263))) then v68=v68 + (2 -1) ;v218=v80[v68];v264=1;end if ((v264==1) or ((6083 -(725 + 807))<=(624 -(348 + 70)))) then v217=1 + 0 ;break;end end break;end end end if ((v217==(1 -0)) or (2585<=(150 + 511))) then if (((3806 -1564)<(4142 -(748 + 305))) and (v218[1 + 0 ]==(1152 -(136 + 995)))) then v176[v214-(1553 -(1011 + 210 + 331)) ]={v86,v218[4 -1 ]};else v176[v214-(1 + 0) ]={v44,v218[1695 -(102 + 1590) ]};end v85[ #v85 + 1 + 0 ]=v176;break;end end break;end end break;end end end v86[v88[1744 -(1607 + 135) ]]=v30(v174,v175,v45);break;end if ((((5832 -(644 + 289)) -(236 + 1296))<=(8022 -3960)) and (v173==(1 -0))) then v176={};v175=v10({},{__index=function(v219,v220)local v221=0 -(0 -0) ;local v222;while true do if ((v221==(0 -(1526 -(445 + 1081)))) or ((5367 -(721 + 599))==(12614 -7774))) then local v239=0 + 0 ;while true do if (((733 + 241 + (1233 -(185 + 1009)))<=(6634 -4235)) and ((710 -(394 + 316))==v239)) then v222=v176[v220];return v222[(2 -1) + 0 ][v222[2]];end end end end end,__newindex=function(v223,v224,v225)local v226=57 -(34 + (1512 -(616 + 873))) ;local v227;while true do if ((v226==(0 -(1180 -(1018 + 162)))) or (((3650 -1919) -((2781 -(408 + 1482)) + 396))>(2524 -((675 -(4 + 301)) + 600)))) then v227=v176[v224];v227[590 -(470 + 119) ][v227[1 + 1 ]]=v225;break;end end end});v173=2;end if ((32==(976 -(889 + 55))) and (v173==(0 + 0))) then local v206=0 -0 ;while true do if ((v206==(0 -0)) or (3525==(4665 -(100 + 3)))) then v174=v81[v88[11 -8 ]];v175=nil;v206=1;end if (((18481 -14504)<=(1490 + (8533 -6008))) and (v206==(2 -1))) then v173=409 -(145 + 263) ;break;end end end end end elseif ((v89<=15) or ((8116 -5159)<(2895 -(140 + 122)))) then v86[v88[1687 -(1456 + 6 + 223) ]]=v86[v88[(1056 -(473 + 582)) + 2 ]][v88[4]];elseif ((v89==(591 -(155 + 420))) or (((6791 -(1369 + 156)) -3212)>=(4375 -(6 + 8)))) then v86[v88[1 + 1 ]]=v45[v88[1 + (1899 -(1372 + 525)) ]];else local v179=0 -0 ;local v180;local v181;while true do if (((1 + 0)==v179) or ((4041 -((1535 -(632 + 781)) + 505))>3957)) then while true do if (((7094 -3368)<(14338 -10474)) and (v180==(0 + 0))) then v181=v88[1170 -(225 + 943) ];v86[v181]=v86[v181](v13(v86,v181 + ((1 + 0) -0) ,v88[3 + 0 ]));break;end end break;end if ((472>=125) and (v179==0)) then local v207=0 -0 ;while true do if ((v207==((2 + 0) -(312 -(76 + 235)))) or ((3870 -((5825 -4157) + 257))>=(6108 -(393 + 945)))) then v179=1;break;end if ((v207==(258 -(103 + 155))) or ((3463 -(58 + 147))<(67 + 96))) then v180=(1783 -(44 + 1739)) + 0 ;v181=nil;v207=42 -(24 + 17) ;end end end end end elseif ((v89<=20) or ((2910 + 1082)>(778 + 3393))) then if (((1784 -(216 + 926))<(18 + 1248 + 3050)) and (v89<=((28 + 2) -12))) then local v142=0;local v143;local v144;local v145;while true do if ((v142==(1 + 0)) or (2920<=329)) then v145=nil;while true do if ((v143==1) or ((871 + 2114)<2166)) then while true do if (((6008 -(1528 + 459))==(4186 -(22 + (1848 -(164 + 1541))))) and (v144==(0 -0))) then v145=v88[2 + 0 ];v86[v145](v86[v145 + (502 -(19 + 482)) + 0 ]);break;end end break;end if ((481<(896 -(37 + 34))) and (v143==(0 -0))) then local v228=560 -(350 + 210) ;while true do if ((v228==(1866 -(955 + 911))) or ((1744 + 81 + 219)<547)) then v144=0 + (0 -0) ;v145=nil;v228=1 + 0 ;end if (((1 + 0)==v228) or (340==(4377 -2903))) then v143=464 -(308 + 155) ;break;end end end end break;end if ((v142==0) or (((1365 + 2862) -(410 + 610))<(3472 -1538))) then v143=0 -0 ;v144=nil;v142=2 -1 ;end end elseif (((1181 + 2554)>=(1005 + 657)) and (v89>(19 + 0))) then do return;end else for v188=v88[1 + 1 ],v88[11 -8 ] do v86[v188]=nil;end end elseif ((v89<=(2 + 19)) or ((13022 -8835)==(920 -(128 + (1221 -(956 + 255)))))) then v86[v88[5 -3 ]]=v86[v88[1720 -(1154 + 563) ]];elseif ((v89>(2 + 20)) or ((4387 -(317 + (1809 -879)))<2487)) then local v182=0 -0 ;local v183;local v184;local v185;local v186;while true do if ((v182==2) or ((1162 -(650 + 211))>=((6252 -(126 + 747)) -2452))) then for v229=v183,v69 do local v230=0 -0 ;local v231;local v232;while true do if ((((4506 + 2034) -3921)>(2049 -1114)) and (v230==(0 + 0))) then v231=435 -(100 + 335) ;v232=nil;v230=1 + 0 ;end if ((v230==(1552 -(1496 + 55))) or (4619==(2612 + 298))) then while true do if ((v231==0) or ((686 + 23)<=((764 -(198 + 235)) + 201))) then v232=792 -(760 + 32) ;while true do if ((v232==(0 -0)) or ((1369 -601)>(2571 + 353))) then v186=v186 + (1850 -(1641 + 208)) ;v86[v229]=v184[v186];break;end end break;end end break;end end end break;end if ((v182==(3 -2)) or ((3143 -(402 + 297))==(7941 -4629))) then local v208=985 -(233 + 752) ;while true do if ((v208==(880 -(482 + 398))) or ((3565 + 269)==(219 + 2489))) then v69=(v185 + v183) -1 ;v186=0 + (0 -0) ;v208=55 -(52 + 2) ;end if ((v208==(1 + 0)) or (411>(1037 + 1849))) then v182=(1 + 1) -0 ;break;end end end if ((v182==(0 + 0)) or ((3900 + 634)==2238)) then local v209=838 -((1958 -1185) + 65) ;while true do if ((v209==1) or (((1669 -(1290 + 334)) + 403)>=(56 + 928))) then v182=(8 -5) -2 ;break;end if ((v209==(0 + 0)) or ((3521 -2498)<(1143 -(52 + 161)))) then v183=v88[1 + 1 ];v184,v185=v83(v86[v183](v13(v86,v183 + 1 ,v88[308 -(222 + 83) ])));v209=344 -(257 + 86) ;end end end end elseif (v86[v88[(537 + 333) -(471 + 397) ]] or ((432 + 670)<(436 -252))) then v68=v68 + (1529 -(460 + 428 + 640)) ;else v68=v88[6 -3 ];end v68=v68 + 1 ;break;end if ((v94==(0 -0)) or ((1850 -((1955 -(866 + 83)) + 109))>=(1836 + 1082))) then local v119=676 -(551 + 125) ;while true do if ((v119==(1203 -(1078 + 125))) or (4327<((1322 -1042) -171))) then local v123=1339 -(1073 + (289 -(8 + 15))) ;while true do if (((7168 -2245)>=4733) and (v123==(1168 -(738 + 430)))) then v88=v80[v68];v89=v88[(1206 -(883 + 322)) + (830 -(277 + 553)) ];v123=1 + 0 ;end if (((3 -2)==v123) or ((11696 -7064)==3900)) then v119=1 -(0 + 0) ;break;end end end if ((3817>=(90 + 1611)) and (v119==((2 -1) -0))) then v94=1088 -(693 + 394) ;break;end end end end break;end end end end v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end if (v67==3) then A,B=v28(v11(v72));if  not A[1] then local v95=v43[4][v68] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v30(v29(),{},v17)(...);end if (1==v18) then v21=nil;function v21(v49,v50,v51)if v51 then local v75=(v49/((2 + 0)^(v50-(1 + 0))))%(2^(((v51-(1 + 0)) -(v50-(1 + 0 + 0))) + ((2 -1) -0))) ;return v75-(v75%(1 + 0)) ;else local v76=(3 -1)^(v50-(1 + 0 + 0)) ;return (((v49%(v76 + v76))>=v76) and (2 -1)) or (161 -(149 + 12)) ;end end v22=nil;v18=2;end if (v18==4) then function v25()local v52=0 + (0 -0) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==(1556 -(188 + 1366))) then v57=v21(v54,49 -28 ,(156 + 273) -((2055 -(893 + 1027)) + 263) );v58=((v21(v54,1333 -(429 + 872) )==(688 -(290 + 397))) and  -(1800 -(1036 + 763))) or (1 + 0) ;v52=(6104 -4204) -(713 + (2948 -1764)) ;end if (v52==(0 + 0)) then v53=v24();v54=v24();v52=1928 -(726 + 1201) ;end if (v52==(3 -2)) then v55=1;v56=(v21(v54,(3090 -1994) -(915 + 180) ,32 -12 ) * ((1018 -(342 + 559 + 115))^(10 + 22))) + v53 ;v52=2 -0 ;end if (v52==3) then if (v57==(1283 -(364 + 919))) then if (v56==(1707 -(1304 + 403))) then return v58 * (0 + 0) ;else local v111=0 + 0 ;while true do if (v111==(0 -0)) then v57=(1481 -(1174 + 306)) + (1364 -(203 + 1161)) ;v55=0 + 0 ;break;end end end elseif (v57==(4188 -2141)) then return ((v56==(0 -(0 + 0))) and (v58 * ((1393 -(1285 + 107))/(45 -(18 + 27))))) or (v58 * NaN) ;end return v8(v58,v57-(114 + 909) ) * (v55 + (v56/((6 -(2 + 2))^(25 + 27)))) ;end end end v26=nil;function v26(v59)local v60;if  not v59 then local v77=191 -(51 + 140) ;while true do if (v77==(0 + 0)) then v59=v24();if (v59==0) then return "";end break;end end end v60=v3(v16,v19,(v19 + v59) -(1928 -(922 + 1005)) );v19=v19 + v59 ;local v61={};for v73=990 -(180 + 809) , #v60 do v61[v73]=v2(v1(v3(v60,v73,v73)));end return v6(v61);end v18=5;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v62)if (v1(v62,2)==79) then v20=v0(v3(v62,1,1));return "";else local v78=0;local v79;while true do if (v78==0) then v79=v2(v0(v62,16));if v20 then local v112=0;local v113;while true do if (v112==0) then v113=v5(v79,v20);v20=nil;v112=1;end if (v112==1) then return v113;end end else return v79;end break;end end end end);v18=1;end if (v18==2) then function v22()local v63=v1(v16,v19,v19);v19=v19 + 1 ;return v63;end v23=nil;function v23()local v64,v65=v1(v16,v19,v19 + 2 + 0 );v19=v19 + (893 -(513 + 378)) ;return (v65 * (634 -378)) + v64 ;end v18=3;end end end vv9(),...);end
